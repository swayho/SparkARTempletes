

//==============================================================================
// Welcome to shader authoring in Spark AR Studio!
//==============================================================================

#import <gradients>
#import <sdf>

float gauss(float x, float e){
    return exp(-pow(x, 2.)/e);
}

void main(in function<vec4(vec2)> tex, in vec2 resolution, in float blur_size, in float blur_width, out vec4 fragColor) {
  vec2 uv = fragment(std::getVertexTexCoord());
  vec4 pixval = vec4(0.);
  float tot = 0.;
  int nb = int(2.*blur_size+1.);

  for (int x=0; x<nb; x++){
    float x2 = blur_width*(float(x)-blur_size);
    vec2 ipos = uv + vec2(0., x2/resolution.y);
    float g = gauss(x2, float(20.*blur_size)*(0.5+0.5));
    pixval+= g*tex(ipos);
    tot+= g;
  }
  fragColor = pixval/tot;
}
